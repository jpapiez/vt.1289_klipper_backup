## Voron Design Trident 250/300/350mm BigTreeTech OctoPus V1 TMC2209 UART config
[include mainsail.cfg]
[include canbus.cfg]

[mcu rpi]
serial: /tmp/klipper_host_mcu

[mcu]
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_110045001550535556323420-if00
restart_method: command
##--------------------------------------------------------------------

[mcu can0]
# run the following command to locate the uuid:
# ~/klippy-env/bin/python ~/klipper/scripts/canbus_query.py can0
canbus_uuid: b4d4cb8f41f5

[printer]
kinematics: corexy
max_velocity: 400            # 800
max_accel: 4000 # 9000      # Default: 3000, Max 4000 according to LDO
max_accel_to_decel: 2000    # 4500   # half of max_accel as suggested by Ellis tuning
# max_accel_to_decel: 1500   # half of max_accel as suggested by Ellis tuning
max_z_velocity: 15           # Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

# Enable G2, G3 for Arc support
# Default resolution is 1.0. 
#   0.25 comes from Prusa config
#   0.1 comes from Orca recommendation
[gcode_arcs]
resolution: 0.1

#  Stepper Settings
#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  B Stepper - Left
##  Connected to MOTOR_0
##  LDO-42STH48-2004MAH
##    Nema 17 Stepper Motor. 0.9 degree step angle, 400 steps per revolution, 2A, 45N-cm holding torque, 48mm body, 24mm output shaft (5mm D)
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 400  #set to 200 for 1.8 degree stepper
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_min: 0
position_endstop: 305 # 306
position_max: 305 # 306
homing_speed: 20  # For Sensorless, set to half of rotational distance
homing_retract_dist: 0
homing_positive_dir: true

##  A Stepper - Right
##  Connected to MOTOR_1
##  LDO-42STH48-2004MAH
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 400  #set to 200 for 1.8 degree stepper
endstop_pin: tmc2209_stepper_y:virtual_endstop
position_min: 0
position_endstop: 305
position_max: 305
homing_speed: 20  # For Sensorless, set to half of rotational distance
homing_retract_dist: 0
homing_positive_dir: true

#####################################################################
#   Z Stepper Settings
#####################################################################
##  LD0-42STH40-1684CL350ET
##  NEMA 17 1.8 degree step angle, 200 Steps, 1.68A, 450mN-m holding torque, 40mm body with a 300mm output shaft and TR8x4 nut.
##  Z0 Stepper - Front Left
##  Connected to MOTOR_2
##  Endstop connected to DIAG_2
##
## TAP Configuration
## https://github.com/VoronDesign/Voron-Tap/blob/main/config/tap_klipper_instructions.md
[stepper_z]
step_pin: PF11
dir_pin: !PG3
enable_pin: !PG5
rotation_distance: 4    # Rotation Distance for TR8x8 = 8, TR8x4 = 4, TR8x2 = 2
microsteps: 32
full_steps_per_rotation: 200
## Original endstop_pin
## endstop_pin: PG10
##
## endstop_pin configured for TAP
endstop_pin: probe:z_virtual_endstop
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
##
## Commented out position_endstop for TAP
## position_endstop: -0.5
position_max: 280 ## For LDO 300^3 kits use 290, for 250^3 kits use 240
position_min: -10 # -2.5
homing_speed: 8 # Leadscrews are slower than 2.4, 10 is a recommended max.
second_homing_speed: 3
homing_retract_dist: 3

##  Z1 Stepper - Rear Center
##  Connected to MOTOR_3
[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
rotation_distance: 4  # Rotation Distance for TR8x8 = 8, TR8x4 = 4, TR8x2 = 2
microsteps: 32
full_steps_per_rotation: 200

##  Z2 Stepper - Front Right
##  Connected to MOTOR_4
[stepper_z2]
step_pin: PF9
dir_pin: !PF10
enable_pin: !PG2
rotation_distance: 4  # Rotation Distance for TR8x8 = 8, TR8x4 = 4, TR8x2 = 2
microsteps: 32
full_steps_per_rotation: 200

[tmc2209 stepper_x]
uart_pin: PC4
interpolate: False
run_current:  1.0            # 0.8
sense_resistor: 0.110
stealthchop_threshold: 0
diag_pin: ^PG6               # use the same pin that was previously the endstop_pin!
driver_SGTHRS: 97            # 255 is most sensitive value, 0 is least sensitive

[tmc2209 stepper_y]
uart_pin: PD11
interpolate: False
run_current:  1.0            # 0.8
sense_resistor: 0.110
stealthchop_threshold: 0
diag_pin: PG9                # use the same pin that was previously the endstop_pin!
driver_SGTHRS: 89            # 255 is most sensitive value, 0 is least sensitive

[tmc2209 stepper_z]
uart_pin: PC6
interpolate: False
run_current: 0.8             # 0.6
sense_resistor: 0.110
stealthchop_threshold: 0

[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: False
run_current: 0.8             # 0.6
sense_resistor: 0.110
stealthchop_threshold: 0

[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: False
run_current: 0.8             # 0.6
sense_resistor: 0.110
stealthchop_threshold: 0

[tmc2209 extruder]
uart_pin: can0:PA15
interpolate: false
run_current: 0.6
#sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
#   Extruder
#####################################################################

# Canbus Configuration
[extruder]
step_pin: can0:EXT_STEP
dir_pin: can0:EXT_DIR # removed !
enable_pin: !can0:EXT_EN

##  Update value below when you perform extruder calibration
##  If you ask for 100mm of filament, but in reality it is 98mm:
##  rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
rotation_distance: 47.55888 #47.088   # Galileo 2
##  Update Gear Ratio depending on your Extruder Type
##  Use 50:10 for Stealthburner/Clockwork 2
##  Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##  Use 80:20 for M4, M3.1
##  Use 9:1 for Galeleo 2
gear_ratio: 9:1
microsteps: 16
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: can0:HE0

[extruder]
# Phaetus Rapido with stock thermistor
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: can0: TH0
min_temp: 0
max_temp: 285
max_power: 1.0
min_extrude_temp: 170
max_extrude_cross_section: 5 #directed by KAMP adaptive purge
max_extrude_only_distance: 200.0  # Added to allow longer extrude moves for loading & unloading macros
pressure_advance: 0.03
##  Default is 0.040, leave stock
pressure_advance_smooth_time: 0.040

# [extruder]
# Slice Mosquito with PT1000 Termistor
# sensor_type:MAX31865
# sensor_pin: can0: PA4  # if your can mcu is called something other than EBBCan, change that
# spi_bus: spi1
# rtd_nominal_r: 1000   # PT1000 should be 1000.  PT100 should be 100
# rtd_reference_r: 4300 # PT1000 should be 4300.  PT100 should be 430
# rtd_num_of_wires: 2   # This is the number of wires connected to the header.  Either 2 (typical) or 4.
# min_temp: 10
# max_temp: 500 # max temp for Mosquito is 500c
# max_power: 1.0
# min_extrude_temp: 170
# max_extrude_cross_section: 5 #directed by KAMP adaptive purge
# max_extrude_only_distance: 150.0  # Added to allow longer extrude moves for loading & unloading macros
# pressure_advance: 0.02 # 0.05
# pressure_advance_smooth_time: 0.040


#####################################################################
#   Bed Heater
#####################################################################
[heater_bed]
##  SSR Pin - HE1
##  Thermistor - TB
heater_pin: PA2
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: PF3
##  Adjust max_power so it doesn't exceed the SSR rating. The Omron G3NA-210B-DC5 SSR is rated at 4 amps without a heatsink.
##  The formula is "4 / (Wattage_of_bed_heater / Mains_voltage) = max_power"
##  If max_power is greater than 1.0, use 1.0
max_power: 0.85
min_temp: 0
max_temp: 120

#####################################################################
#  Probe and Gantry Adjustment Routines
#####################################################################
[probe]
## Probe Type: Voron TAP
#pin: ^!PG15
pin: ^!can0:LIMIT_2 # For TAP
x_offset: 0
y_offset: 0
speed: 10.0
samples: 3
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.006 # 0.01 # huge value for testing 0.01 ; 0.006
samples_tolerance_retries: 3

## Added activate_gcode for TAP
activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}

[z_tilt]
##  Use Z_TILT_ADJUST to level the bed .
##  z_positions: Location of toolhead
z_positions:
   -50, 18
   150, 348
   350, 18
points:
   30, 5
   150, 245
   270, 5
speed: 200
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075

#####################################################################
#  Fan Control & Extra Thermistor
#####################################################################
##  Print Cooling Fan - FAN0
[fan]
#pin: PA8
pin: can0:FAN0
kick_start_time: 0.5
##  Depending on your fan, you may need to increase this value
##  if your fan will not start. Can change cycle_time (increase)
##  if your fan is not able to slow down effectively
off_below: 0.10

##  Hotend Fan - FAN1
[heater_fan hotend_fan]
# pin: PE5
pin: can0:FAN1
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##  If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

[fan_generic controller_fan]
#  Controller fan - FAN2
#  Generic so it can be controlled via delayed_gcode
pin: PD12
max_power: 1.0
kick_start_time: 0.5

# [temperature_fan controller_fan]
# ##  Controller fan - FAN2
# # Temperature controlled so it's not running all the time. 
# pin: PD12
# control: watermark
# max_delta: 3.0
# sensor_type: temperature_host
# min_temp: 0
# max_temp: 100
# target_temp: 60

# [heater_fan exhaust_fan]
# ##  Exhaust fan - FAN3
# pin: PD13
# max_power: 1.0
# shutdown_speed: 0.0
# kick_start_time: 5.0
# heater: heater_bed
# heater_temp: 60
# fan_speed: 1.0


##  Exhaust fan - FAN3
[temperature_fan chamber]
pin: PD13
max_power: 1.0
shutdown_speed: 0.0
cycle_time: 0.0005     #2 kHz PWM signal
hardware_pwm: False
kick_start_time: 0
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: PF4
#sensor_type: Generic 3950
#sensor_pin: can0: PA2
#sensor_type: ATC Semitec 104NT-4-R025H42G
#sensor_pin: can0:TH0
min_temp: 0
max_temp: 70
target_temp: 0
max_speed: 1.0 #0.7
min_speed: 0.1
control: pid
pid_Kp: 2.0     ;40
pid_Ki: 5.0     ;0.2
pid_Kd: 0.5     ;0.1
pid_deriv_time: 2.0
gcode_id: C

[include nevermore.cfg]

#####################################################################
#  TEMPERATURE SENSORS
#####################################################################
#[temperature_sensor chamber_temp]
## Chamber Temperature - T1
#sensor_type: ATC Semitec 104NT-4-R025H42G
#sensor_pin: PF5
#min_temp: 0
#max_temp: 100
#gcode_id: chamber_th

## Temperature of the MCU
[temperature_sensor Octopus_MCU]
sensor_type: temperature_mcu
min_temp: 10
max_temp: 100

## Temperature of the Raspberry PI
[temperature_sensor RPi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100
gcode_id: PI

[temperature_sensor EBB_SB2209]
sensor_type: Generic 3950
sensor_pin: can0:TH1

#####################################################################
#  Caselight pin Definition
#####################################################################
## Caselight - XYE board, HB Connector
[output_pin caselight]
pin: PD15
pwm:true
#hardware_pwm: true
shutdown_value: 0
value:0.05
cycle_time: 0.01
#cycle_time: 0.0001

#####################################################################
#  Homing definition
#####################################################################
[homing_override]
axes: xyz
gcode:
  LED_HOMING
  {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}

  {% if home_all or 'X' in params %}
    RESPOND MSG="Homing X Axis"
    _HOME_X
  {% endif %}
  
  {% if home_all or 'Y' in params %}
    RESPOND MSG="Homing Y Axis"
    _HOME_Y
  {% endif %}
  
  {% if home_all or 'Z' in params %}  
    RESPOND MSG="Homing Z Axis"
    G90
    G0 X150 Y150 # Added for TAP
    G28 Z
    G1 Z10
  {% endif %}
  UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=1
  LED_STANDBY

#####################################################################
#  Bed Mesh Definition
#####################################################################
[bed_mesh]
##  Start end end point of mesh 
mesh_min: 40, 40
mesh_max: 260,260
speed: 1000 #300

##   The height (in mm) that the head should be commanded to move to
##   just prior to starting a probe operation. The default is 5.
horizontal_move_z: 5 # Tap 
#horizontal_move_z: 7.5 ; MagProbe Klicky
#horizontal_move_z: 4 ; Vinda or Omron
probe_count: 7,7        # updated from 5,5 for KAMP adaptive bed mesh
##   The interpolation algorithm to use. May be either "lagrange"
##   or "bicubic". This option will not affect 3x3 grids, which
##   are forced to use lagrange sampling.  Default is lagrange.
algorithm: bicubic
##   The gcode z position in which to start phasing out z-adjustment
##   when fade is enabled.  Default is 1.0.
fade_start: 0.6
##   The gcode z position in which phasing out completes.  When set
##   to a value below fade_start, fade is disabled. It should be
##   noted that fade may add unwanted scaling along the z-axis of a
##   print.  If a user wishes to enable fade, a value of 10.0 is
##   recommended. Default is 0.0, which disables fade.
fade_end: 10.0
##   The z position in which fade should converge. When this value is set
##   to a non-zero value it must be within the range of z-values in the mesh.
##   Users that wish to converge to the z homing position should set this to 0.
##   Default is the average z value of the mesh.
#fade_target: 0
##   The distance (in mm) along a move to check for split_delta_z.
##   This is also the minimum length that a move can be split. Default
##   is 5.0.
#move_check_distance: 3
##   The amount of Z difference (in mm) along a move that will
##   trigger a split. Default is .025.
#split_delta_z: 0.0125
##   A comma separated pair of integers (X,Y) defining the number of
##   points per segment to interpolate in the mesh along each axis. A
##   "segment" can be defined as the space between each probed
##   point. The user may enter a single value which will be applied
##   to both axes.  Default is 2,2.
mesh_pps: 2,2           # Set to default value, specified so ADAPTIVE_BED_MESH will work
##   When using the bicubic algorithm the tension parameter above
##   may be applied to change the amount of slope interpolated.
##   Larger numbers will increase the amount of slope, which
##   results in more curvature in the mesh. Default is .2.
#bicubic_tension: 0.2

#####################################################################
#  G Sensor definition
#####################################################################
[adxl345]
cs_pin: can0:ADXL_CS
spi_software_sclk_pin: can0:ADXL_SCLK
spi_software_mosi_pin: can0:ADXL_MOSI
spi_software_miso_pin: can0:ADXL_MISO
axes_map: x,y,z
##  The SPI speed (in hz) to use when communicating with the chip.
##  The default is 5000000.
#spi_speed: 5000000
## Output data rate for ADXL345. ADXL345 supports the following data
##  rates: 3200, 1600, 800, 400, 200, 100, 50, and 25. Note that it is
## not recommended to change this rate from the default 3200, and
##  rates below 800 will considerably affect the quality of resonance
##  measurements.
#rate: 3200
##  The accelerometer axis for each of the printer's x, y, and z axes.
##  This may be useful if the accelerometer is mounted in an
##  orientation that does not match the printer orientation. For
##  example, one could set this to "y,x,z" to swap the x and y axes.
##  It is also possible to negate an axis if the accelerometer
##  direction is reversed (eg, "x,z,-y"). The default is "x,y,z".
##  receck
#axes_map: x,y,z

#####################################################################
#  resonance tester definition
#####################################################################
[resonance_tester]
accel_chip: adxl345
##  A list of X,Y,Z coordinates of points (one point per line) to test
##  resonances at. At least one point is required. Make sure that all
##  points with some safety margin in XY plane (~a few centimeters)
##  are reachable by the toolhead.
probe_points:
  150,150,20 # center of bed (300x300) and 20mm above.
##  Maximum input shaper smoothing to allow for each axis during shaper
##  auto-calibration (with 'SHAPER_CALIBRATE' command). By default no
##  maximum smoothing is specified. Refer to Measuring_Resonances guide
##  for more details on using this feature.
#max_smoothing:
##  Minimum/Maximum frequency to test for resonances.
min_freq: 5
max_freq: 133
##  This parameter is used to determine which acceleration to use to
##  test a specific frequency: accel = accel_per_hz * freq. Higher the
##  value, the higher is the energy of the oscillations. Can be set to
##  a lower than the default value if the resonances get too strong on
##  the printer. However, lower values make measurements of
##  high-frequency resonances less precise. The default value is 75
##  (mm/sec).
#accel_per_hz: 75
##  Determines the speed of the test. When testing all frequencies in
##  range [min_freq, max_freq], each second the frequency increases by
##  hz_per_sec. Small values make the test slow, and the large values
##  will decrease the precision of the test. The default value is 1.0
##  (Hz/sec == sec^-2).
#hz_per_sec: 1

#####################################################################
#  input shaper  definition
#####################################################################
#[input_shaper]
##  A frequency (in Hz) of the input shaper for X or Y axis. 
#shaper_freq_x = 84.8
#shaper_freq_y = 48.8
##  A type of the intput shaper for X or Y axia.
#shaper_type_x = 3hump_ei
#shaper_type_y = mzv
##  Damping ratios of vibrations of X and Y axes used by input shapers
##  to improve vibration suppression. Default value is 0.1 which is a
##  good all-round value for most printers. In most circumstances this
##  parameter requires no tuning and should not be changed.
#damping_ratio_x: 0.1
#damping_ratio_y: 0.1

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################
[idle_timeout]
timeout: 1800

[pause_resume]
[display_status]
[respond]
default_type: echo
#   Sets the default prefix of the "M118" and "RESPOND" output to one
#   of the following:
#       echo: "echo: " (This is the default)
#       command: "// "
#       error: "!! "
default_prefix:
#   Directly sets the default prefix. If present, this value will
#   override the "default_type".


#####################################################################
#   Macros
#####################################################################
[include basic_macros.cfg]
[include macros.cfg]
[include bed_mesh_macros.cfg]
[include caselight_macros.cfg]
[include fan_macros.cfg]
[include homing_macros.cfg]
[include input_shaper_macros.cfg]
[include KAMP_Settings.cfg]          # Make sure to include my updated version of the KAMP settings file for my preferences
[include debug_macro.cfg]
[include pid_tune_macros.cfg]

# Macro for Git backup from Klipper interface
[include backup.cfg]

#  moonraker/mainsail
[include webclient_macros.cfg]

#[include macros_webcam.cfg]          # Webcam control

#  probe accuracy test
[include test_probe_accuracy.cfg]

#  flexplate select menu
[include flexplate.cfg]

#  filament and pressure advance
[include filament.cfg]
[include pressure_advance_macros.cfg]

#  filament runout sensor
[include runout.cfg]

#  force move used only if gantry is at z max
[include force_move.cfg]

[include leds_stealthburner.cfg]     # for SB toolhead LED definitions

[include idle_timeout.cfg]            # idle timeout configuration
#[include timelapse.cfg]              # Moonraker timelapse

[include park_macro.cfg]              # macros for parking the toolhead

# Klippain ShakeTune 
[include K-ShakeTune/*.cfg]

[gcode_shell_command plot_graph]
command: bash /home/pi/printer_data/config/scripts/plot_graphs.sh
timeout: 500.0
verbose: True

#  print and service time storage
[include printtime.cfg]

[include auto_tap.cfg]

# heat_soak_macros not compatible with print start loop
# [include heat_soak_macros.cfg]       # Macros for heat soaking the chamber

[exclude_object]                     # Turn on exclude object functionality

#  File location of stored varibales
[save_variables]
filename: /home/pi/printer_data/config/.variables.stb

#  Virtual SD Card
[virtual_sdcard]
path: /home/pi/printer_data/gcodes

[include variable_setup.cfg]

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 22.817
#*# pid_ki = 2.084
#*# pid_kd = 62.463
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 55.413
#*# pid_ki = 2.353
#*# pid_kd = 326.247
#*#
#*# [probe]
#*# z_offset = -1.195
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.039375, 0.058125, 0.046875, 0.060625
#*# 	  0.038750, 0.034375, 0.046250, 0.065000
#*# 	  0.026875, 0.061250, 0.063750, 0.079375
#*# x_count = 4
#*# y_count = 3
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 106.73
#*# max_x = 193.28
#*# min_y = 128.06
#*# max_y = 172.84
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 52.0
#*# shaper_type_y = mzv
#*# shaper_freq_y = 37.6
