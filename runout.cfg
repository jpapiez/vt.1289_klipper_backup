#####################################################################
# 	RefillPlease - Filament Runout Sensor
#####################################################################
[filament_switch_sensor runout]
switch_pin: ^PG12
pause_on_runout: false                                     # False activates ability to use runout_gcode instead of
                                                           #  just running PAUSE automatically
runout_gcode:
  RESPOND TYPE=error MSG="RUNOUT: Filament switch runout!"
  PAUSE                                                    # Code to run when runout is detected
insert_gcode:
  {% if printer.print_stats.state|lower != "paused" and printer.print_stats.state|lower != "printing" %}
    RESPOND MSG="RUNOUT: Filament inserted. Run LOAD_FILAMENT to prime nozzle."
  {% else %}
    RESPOND MSG="RUNOUT: Filament inserted. Filament load starting in 20 seconds."
    UPDATE_DELAYED_GCODE ID=_RELOAD_RUNOUT DURATION=20
    LED_PRINTING                                           # Code to run when new filament is inserted
  {% endif %}

[filament_motion_sensor motion]
#   The minimum length of filament pulled through the sensor to trigger
#   a state change on the switch_pin
#   Default is 7 mm.
detection_length: 14.0
switch_pin: ^PG13
extruder: extruder
pause_on_runout: false                                     # False activates ability to use runout_gcode instead of
                                                           #  just running PAUSE automatically
runout_gcode: 
  RESPOND TYPE=error MSG="RUNOUT: Filament motion runout detected!"
  #PAUSE                                                    # Code to run when runout is detected
insert_gcode:
  {% if printer.print_stats.state|lower != "paused" and printer.print_stats.state|lower != "printing" %}
    RESPOND MSG="RUNOUT: Filament inserted. Run LOAD_FILAMENT to prime nozzle."
  {% else %}
    RESPOND MSG="RUNOUT: Filament inserted. Filament load starting in 20 seconds."
    UPDATE_DELAYED_GCODE ID=_RELOAD_RUNOUT DURATION=20
    LED_PRINTING                                           # Code to run when new filament is inserted
  {% endif %}

[delayed_gcode DISABLEFILAMENTSENSOR] ; This will disable the SFS 1 second after klipper starts
initial_duration: 1
gcode:
    SET_FILAMENT_SENSOR SENSOR=runout ENABLE=0
    SET_FILAMENT_SENSOR SENSOR=motion ENABLE=0
    
[gcode_macro M600]
description: Filament change
gcode: PAUSE Y=10   ; everything needed is defined there


[delayed_gcode _RELOAD_RUNOUT]
gcode:
  LOAD_FILAMENT RUNOUT="true"


[gcode_macro _RUNOUT_INFO]
description: Helper: Print runout sensor status
gcode:
  {% set user = printer['gcode_macro _USER_VARIABLE'] %}
  {% set out = ['RUNOUT: ' + user.hw.runout.type|capitalize + ' Sensor'] if user.hw.runout.sensor
          else ['RUNOUT: Stored in file']                                if user.hw.runout.type == 'file'
          else ['RUNOUT: Not monitored'] %}
  {% set enable = printer["filament_" + user.hw.runout.type + "_sensor runout"].enabled if user.hw.runout.sensor else False %}
  {% set _dummy = out.append('Enabled: ' + enable|lower) if user.hw.runout.sensor %}
  {% set detected = printer["filament_" + user.hw.runout.type + "_sensor runout"].filament_detected if enable
               else printer.save_variables.variables.filament_loaded                                if user.hw.runout.type == 'file' %}
  {% set _dummy = out.append('Detect Filament: ' + detected|lower) if detected is defined %}
             
  {action_respond_info(out|join("\n"))}


[gcode_macro DISABLE_FILAMENT_SENSOR]
gcode:
  {% if 'filament_switch_sensor runout' in printer.configfile.settings %}
    SET_FILAMENT_SENSOR SENSOR=runout ENABLE=0
  {% endif %}
  {% if 'filament_motion_sensor motion' in printer.configfile.settings %}
    SET_FILAMENT_SENSOR SENSOR=motion ENABLE=0
  {% endif %}

[gcode_macro ENABLE_FILAMENT_SENSOR]
gcode:
  {% if 'filament_switch_sensor runout' in printer.configfile.settings %}
    SET_FILAMENT_SENSOR SENSOR=runout ENABLE=1
  {% endif %}
  {% if 'filament_motion_sensor motion' in printer.configfile.settings %}
    SET_FILAMENT_SENSOR SENSOR=motion ENABLE=1
  {% endif %}

[gcode_macro SFS_ENABLE] ; Add this to PRINT_START
description: Enable smart filament sensor
gcode:
  M117 ENABLING the Smart Filament Sensor
  G92 E0
  {% if 'filament_switch_sensor runout' in printer.configfile.settings %}
    SET_FILAMENT_SENSOR SENSOR=runout ENABLE=1
  {% endif %}
  {% if 'filament_motion_sensor motion' in printer.configfile.settings %}
    SET_FILAMENT_SENSOR SENSOR=motion ENABLE=1 
  {% endif %}

[gcode_macro SFS_DISABLE] ; Add this to PRINT_END and PRINT_CANCEL
description: Disable smart filament sensor 
gcode:
  M117 DISABLING the Smart Filament Sensor
  G92 E0
  {% if 'filament_switch_sensor runout' in printer.configfile.settings %}
    SET_FILAMENT_SENSOR SENSOR=runout ENABLE=0
  {% endif %}
  {% if 'filament_motion_sensor motion' in printer.configfile.settings %}
    SET_FILAMENT_SENSOR SENSOR=motion ENABLE=0
  {% endif %}

[gcode_macro SET_FILAMENT_SENSOR]
description: Sets the filament sensor on/off and save value to file
rename_existing: SET_FILAMENT_SENSOR_BASE
gcode:
  {% if printer.save_variables.variables.filament_sensor is not defined %}
    {% set filament_sensor = {params.SENSOR|string: params.ENABLE|int} %}
  {% else %}
    {% set filament_sensor = printer.save_variables.variables.filament_sensor %}
    {% set _dummy = filament_sensor.update({params.SENSOR|string: params.ENABLE|int}) %}
  {% endif %}

  {% set fsensor_enabled = True if params.ENABLE == '1' else False%}
  _PRINT_AR T="Filament Sensor {params.SENSOR} Enabled: {fsensor_enabled}"

  SET_FILAMENT_SENSOR_BASE SENSOR={params.SENSOR} ENABLE={params.ENABLE}
  SAVE_VARIABLE VARIABLE=filament_sensor VALUE="{filament_sensor}"


[gcode_macro _RESTORE_FILAMENT_SENSOR]
description: Restore the filament sensor on/off state at klipper start
gcode:
  {% if printer.save_variables.variables.filament_sensor is defined %}
    {% for sensor in printer.save_variables.variables.filament_sensor %}
       SET_FILAMENT_SENSOR_BASE SENSOR={sensor} ENABLE={printer.save_variables.variables.filament_sensor[sensor]}
    {% endfor %}
  {% endif %}
